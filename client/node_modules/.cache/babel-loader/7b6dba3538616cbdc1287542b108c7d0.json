{"ast":null,"code":"var _jsxFileName = \"/Users/Cacace/Desktop/platform/platform/client/src/components/posts/Player.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Player extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createVideoPlayer = amp => {\n      const video = amp(this.videoRef, {\n        nativeControlsForTouch: false,\n        autoplay: true,\n        width: \"640\",\n        height: \"400\",\n        controls: true,\n        logo: {\n          enabled: false\n        },\n        techOrder: ['azureHtml5JS', 'html5FairPlayHLS', 'html5']\n      });\n      video.addEventListener(amp.eventName.error, errorDetails => {\n        console.log(errorDetails);\n      });\n      return video;\n    };\n\n    this.waitForAmp = () => {\n      return new Promise((resolve, reject) => {\n        let waited = 0;\n\n        const wait = interval => {\n          setTimeout(() => {\n            waited += interval;\n            const amp = window['amp'];\n\n            if (amp !== undefined) {\n              return resolve(amp);\n            }\n\n            if (waited >= this.props.ampLoadTimeout * 100) {\n              return reject();\n            }\n\n            wait(interval * 2);\n            return null;\n          }, interval);\n        };\n\n        wait(30);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.waitForAmp().then(amp => {\n      this.videoPlayer = this.createVideoPlayer(amp); // this.videoPlayer.src([this.props.sourceVideo]);\n    }).catch(e => console.error('Could not find Azure Media Player plugin', e));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Player-video-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      className: \"azuremediaplayer amp-default-skin amp-big-play-centered\",\n      ref: input => {\n        this.videoRef = input;\n      },\n      style: {\n        width: '50%'\n      },\n      tabIndex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nPlayer.propTypes = {\n  ampLoadTimeout: PropTypes.number,\n  sourceVideo: PropTypes.array.isRequired\n};\nPlayer.defaultProps = {\n  ampLoadTimeout: 300\n};\nexport default Player;","map":{"version":3,"sources":["/Users/Cacace/Desktop/platform/platform/client/src/components/posts/Player.js"],"names":["React","Component","PropTypes","Player","createVideoPlayer","amp","video","videoRef","nativeControlsForTouch","autoplay","width","height","controls","logo","enabled","techOrder","addEventListener","eventName","error","errorDetails","console","log","waitForAmp","Promise","resolve","reject","waited","wait","interval","setTimeout","window","undefined","props","ampLoadTimeout","componentDidMount","then","videoPlayer","catch","e","render","input","propTypes","number","sourceVideo","array","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAiB7BG,iBAjB6B,GAiBRC,GAAD,IAAS;AAC3B,YAAMC,KAAK,GAAGD,GAAG,CAAC,KAAKE,QAAN,EAAgB;AAC/BC,QAAAA,sBAAsB,EAAE,KADO;AAE/BC,QAAAA,QAAQ,EAAE,IAFqB;AAG/BC,QAAAA,KAAK,EAAE,KAHwB;AAI/BC,QAAAA,MAAM,EAAE,KAJuB;AAK/BC,QAAAA,QAAQ,EAAE,IALqB;AAM/BC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SANyB;AAO/BC,QAAAA,SAAS,EAAE,CACT,cADS,EAET,kBAFS,EAGT,OAHS;AAPoB,OAAhB,CAAjB;AAcAT,MAAAA,KAAK,CAACU,gBAAN,CAAuBX,GAAG,CAACY,SAAJ,CAAcC,KAArC,EAA6CC,YAAD,IAAkB;AAC5DC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACD,OAFD;AAIA,aAAOb,KAAP;AACD,KArC4B;;AAAA,SAuC7BgB,UAvC6B,GAuChB,MAAM;AACjB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAIC,MAAM,GAAG,CAAb;;AACA,cAAMC,IAAI,GAAIC,QAAD,IAAc;AACzBC,UAAAA,UAAU,CAAC,MAAM;AACbH,YAAAA,MAAM,IAAIE,QAAV;AACA,kBAAMvB,GAAG,GAAGyB,MAAM,CAAC,KAAD,CAAlB;;AACA,gBAAIzB,GAAG,KAAK0B,SAAZ,EAAuB;AACvB,qBAAOP,OAAO,CAACnB,GAAD,CAAd;AACC;;AACD,gBAAIqB,MAAM,IAAI,KAAKM,KAAL,CAAWC,cAAX,GAA4B,GAA1C,EAA+C;AAC/C,qBAAOR,MAAM,EAAb;AACC;;AACDE,YAAAA,IAAI,CAACC,QAAQ,GAAG,CAAZ,CAAJ;AACA,mBAAO,IAAP;AACH,WAXS,EAWPA,QAXO,CAAV;AAYD,SAbD;;AAcAD,QAAAA,IAAI,CAAC,EAAD,CAAJ;AACD,OAjBM,CAAP;AAkBD,KA1D4B;AAAA;;AAU7BO,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,UAAL,GAAkBa,IAAlB,CAAwB9B,GAAD,IAAS;AAC9B,WAAK+B,WAAL,GAAmB,KAAKhC,iBAAL,CAAuBC,GAAvB,CAAnB,CAD8B,CAE9B;AACD,KAHD,EAGGgC,KAHH,CAGSC,CAAC,IAAIlB,OAAO,CAACF,KAAR,CAAc,0CAAd,EAA0DoB,CAA1D,CAHd;AAID;;AA6CDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,yDADZ;AAEE,MAAA,GAAG,EAAGC,KAAD,IAAW;AAAE,aAAKjC,QAAL,GAAgBiC,KAAhB;AAAwB,OAF5C;AAGE,MAAA,KAAK,EAAE;AAAE9B,QAAAA,KAAK,EAAE;AAAT,OAHT;AAG2B,MAAA,QAAQ,EAAC,GAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAxE4B;;AAAzBP,M,CACGsC,S,GAAY;AACjBR,EAAAA,cAAc,EAAE/B,SAAS,CAACwC,MADT;AAEjBC,EAAAA,WAAW,EAAEzC,SAAS,CAAC0C,KAAV,CAAgBC;AAFZ,C;AADf1C,M,CAMG2C,Y,GAAe;AACpBb,EAAAA,cAAc,EAAE;AADI,C;AAqExB,eAAe9B,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Player extends Component {\r\n  static propTypes = {\r\n    ampLoadTimeout: PropTypes.number,\r\n    sourceVideo: PropTypes.array.isRequired\r\n  }\r\n\r\n  static defaultProps = {\r\n    ampLoadTimeout: 300,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.waitForAmp().then((amp) => {\r\n      this.videoPlayer = this.createVideoPlayer(amp);\r\n      // this.videoPlayer.src([this.props.sourceVideo]);\r\n    }).catch(e => console.error('Could not find Azure Media Player plugin', e));\r\n  }\r\n\r\n  createVideoPlayer = (amp) => {\r\n    const video = amp(this.videoRef, {\r\n      nativeControlsForTouch: false,\r\n      autoplay: true,\r\n      width: \"640\",\r\n      height: \"400\",\r\n      controls: true,\r\n      logo: { enabled: false },\r\n      techOrder: [\r\n        'azureHtml5JS',\r\n        'html5FairPlayHLS',\r\n        'html5',\r\n      ]\r\n    });\r\n\r\n    video.addEventListener(amp.eventName.error, (errorDetails) => {\r\n      console.log(errorDetails);\r\n    });\r\n\r\n    return video;\r\n  }\r\n\r\n  waitForAmp = () => {\r\n    return new Promise((resolve, reject) => {\r\n      let waited = 0;\r\n      const wait = (interval) => {\r\n        setTimeout(() => {\r\n            waited += interval;\r\n            const amp = window['amp'];\r\n            if (amp !== undefined) {\r\n            return resolve(amp);\r\n            }\r\n            if (waited >= this.props.ampLoadTimeout * 100) {\r\n            return reject();\r\n            }\r\n            wait(interval * 2);\r\n            return null;\r\n        }, interval);\r\n      };\r\n      wait(30);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"Player-video-container\">\r\n        <video\r\n          className=\"azuremediaplayer amp-default-skin amp-big-play-centered\"\r\n          ref={(input) => { this.videoRef = input; }}\r\n          style={{ width: '50%' }} tabIndex=\"0\"\r\n        >\r\n        </video>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}