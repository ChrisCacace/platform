{"ast":null,"code":"// import * as Msal from 'msal';\n// export default class AuthB2C {\n//     constructor() {\n//         var appConfig = {\n//             b2cScopes: [\"https://b2cmern.onmicrosoft.com/mern/demo.read\"],\n//             webApi: \"https://fabrikamb2chello.azurewebsites.net/hello\"\n//         };\n//         const msalConfig = {\n//             auth: {\n//                 clientId: \"ce5d1a2b-20a7-4f63-adde-6f0168cc29e5\",\n//                 authority: \"https://b2cmern.b2clogin.com/b2cmern.onmicrosoft.com/B2C_1_signupsignin\",\n//                 validateAuthority: false\n//             },\n//             cache: {\n//                 cacheLocation: \"localStorage\",\n//                 storeAuthStateInCookie: true\n//             }\n//         };\n//         this.loginRequest = {\n//             // scopes: appConfig.b2cScopes\n//             scopes: [\"openid\", \"profile\"]\n//         };\n//         // request to acquire a token for resource access\n//         this.tokenRequest = {\n//             scopes: appConfig.b2cScopes\n//         };\n//         this.applicationConfig = {\n//             clientID: \"ce5d1a2b-20a7-4f63-adde-6f0168cc29e5\",\n//             authority: \"https://b2cmern.b2clogin.com/b2cmern.onmicrosoft.com/B2C_1_signupsignin\"\n//         }\n//         // this.app = new Msal.UserAgentApplication(\n//         //     this.applicationConfig.clientID,\n//         //     this.applicationConfig.authority)\n//         this.app = new Msal.UserAgentApplication(msalConfig);\n//         this.app.handleRedirectCallback(this.authRedirectCallBack);\n//     }\n//     login = () => {\n//         // return this.app.loginPopup(this.loginRequest).then(function (loginResponse) {\n//         //     // getToken(tokenRequest).then(updateUI);\n//         //     console.log(loginResponse)\n//         // }).catch(function (error) {\n//         //     console.error(error);\n//         // });\n//         return this.app.loginRedirect(this.loginRequest);\n//         // return this.app.loginPopup(this.loginRequest).then(\n//         //     idToken => {\n//         //         console.log(idToken);\n//         //         return null;\n//         //         // const user = this.app.getUser();\n//         //         // if (user) {\n//         //         //     return user;\n//         //         // } else {\n//         //         //     return null;\n//         //         // }\n//         //     },\n//         //     () => {\n//         //         return null;\n//         //     }\n//         // );\n//     };\n//     getAccount = () => {\n//         return this.app.getAccount();\n//     }\n//     authRedirectCallBack = (error, response) => {\n//         console.log('hello from authRedirectCallBack');\n//         console.log(response);\n//         console.log(response.idToken.rawIdToken);\n//         console.log(this.app.getAccount());\n//         if (error) {\n//             console.log(error);\n//         } else {\n//             if (response.tokenType === \"id_token\" && this.app.getAccount() && !this.app.isCallback(window.location.hash)) {\n//                 console.log(\"sdfhjdslfjdsljfldsj\");\n//                 console.log(this.app.getAccount());\n//                 // showWelcomeMessage();\n//                 // acquireTokenRedirectAndCallMSGraph(graphConfig.graphMeEndpoint, loginRequest);\n//             } else if (response.tokenType === \"access_token\") {\n//                 // callMSGraph(graphConfig.graphMeEndpoint, response.accessToken, graphAPICallback);\n//             } else {\n//                 console.log(\"token type is:\" + response.tokenType);\n//             }\n//         }\n//     }\n//     logout = () => {\n//         this.app.logout();\n//     };\n//     getToken = () => {\n//         return this.app.acquireTokenSilent(this.applicationConfig.graphScopes).then(\n//             accessToken => {\n//                 return accessToken;\n//             },\n//             error => {\n//                 return this.app\n//                     .acquireTokenPopup(this.applicationConfig.graphScopes)\n//                     .then(\n//                         accessToken => {\n//                             return accessToken;\n//                         },\n//                         err => {\n//                             console.error(err);\n//                         }\n//                     );\n//             }\n//         );\n//     };\n// }","map":{"version":3,"sources":["D:/Projects/devconnector_2.0/client/src/utils/AuthB2C.js"],"names":[],"mappingssourcesContent":["// import * as Msal from 'msal';\r\n\r\n// export default class AuthB2C {\r\n//     constructor() {\r\n\r\n//         var appConfig = {\r\n//             b2cScopes: [\"https://b2cmern.onmicrosoft.com/mern/demo.read\"],\r\n//             webApi: \"https://fabrikamb2chello.azurewebsites.net/hello\"\r\n//         };\r\n\r\n//         const msalConfig = {\r\n//             auth: {\r\n//                 clientId: \"ce5d1a2b-20a7-4f63-adde-6f0168cc29e5\",\r\n//                 authority: \"https://b2cmern.b2clogin.com/b2cmern.onmicrosoft.com/B2C_1_signupsignin\",\r\n//                 validateAuthority: false\r\n//             },\r\n//             cache: {\r\n//                 cacheLocation: \"localStorage\",\r\n//                 storeAuthStateInCookie: true\r\n//             }\r\n//         };\r\n\r\n//         this.loginRequest = {\r\n//             // scopes: appConfig.b2cScopes\r\n//             scopes: [\"openid\", \"profile\"]\r\n//         };\r\n\r\n//         // request to acquire a token for resource access\r\n//         this.tokenRequest = {\r\n//             scopes: appConfig.b2cScopes\r\n//         };\r\n\r\n//         this.applicationConfig = {\r\n//             clientID: \"ce5d1a2b-20a7-4f63-adde-6f0168cc29e5\",\r\n//             authority: \"https://b2cmern.b2clogin.com/b2cmern.onmicrosoft.com/B2C_1_signupsignin\"\r\n//         }\r\n//         // this.app = new Msal.UserAgentApplication(\r\n//         //     this.applicationConfig.clientID,\r\n//         //     this.applicationConfig.authority)\r\n\r\n//         this.app = new Msal.UserAgentApplication(msalConfig);\r\n//         this.app.handleRedirectCallback(this.authRedirectCallBack);\r\n//     }\r\n\r\n//     login = () => {\r\n//         // return this.app.loginPopup(this.loginRequest).then(function (loginResponse) {\r\n//         //     // getToken(tokenRequest).then(updateUI);\r\n//         //     console.log(loginResponse)\r\n\r\n//         // }).catch(function (error) {\r\n//         //     console.error(error);\r\n//         // });\r\n\r\n//         return this.app.loginRedirect(this.loginRequest);\r\n\r\n//         // return this.app.loginPopup(this.loginRequest).then(\r\n//         //     idToken => {\r\n//         //         console.log(idToken);\r\n\r\n//         //         return null;\r\n//         //         // const user = this.app.getUser();\r\n//         //         // if (user) {\r\n//         //         //     return user;\r\n//         //         // } else {\r\n//         //         //     return null;\r\n//         //         // }\r\n//         //     },\r\n//         //     () => {\r\n//         //         return null;\r\n//         //     }\r\n//         // );\r\n//     };\r\n\r\n//     getAccount = () => {\r\n//         return this.app.getAccount();\r\n//     }\r\n\r\n//     authRedirectCallBack = (error, response) => {\r\n//         console.log('hello from authRedirectCallBack');\r\n\r\n//         console.log(response);\r\n//         console.log(response.idToken.rawIdToken);\r\n\r\n//         console.log(this.app.getAccount());\r\n\r\n//         if (error) {\r\n//             console.log(error);\r\n//         } else {\r\n//             if (response.tokenType === \"id_token\" && this.app.getAccount() && !this.app.isCallback(window.location.hash)) {\r\n//                 console.log(\"sdfhjdslfjdsljfldsj\");\r\n//                 console.log(this.app.getAccount());\r\n\r\n//                 // showWelcomeMessage();\r\n//                 // acquireTokenRedirectAndCallMSGraph(graphConfig.graphMeEndpoint, loginRequest);\r\n//             } else if (response.tokenType === \"access_token\") {\r\n//                 // callMSGraph(graphConfig.graphMeEndpoint, response.accessToken, graphAPICallback);\r\n//             } else {\r\n//                 console.log(\"token type is:\" + response.tokenType);\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     logout = () => {\r\n//         this.app.logout();\r\n//     };\r\n\r\n//     getToken = () => {\r\n//         return this.app.acquireTokenSilent(this.applicationConfig.graphScopes).then(\r\n//             accessToken => {\r\n//                 return accessToken;\r\n//             },\r\n//             error => {\r\n//                 return this.app\r\n//                     .acquireTokenPopup(this.applicationConfig.graphScopes)\r\n//                     .then(\r\n//                         accessToken => {\r\n//                             return accessToken;\r\n//                         },\r\n//                         err => {\r\n//                             console.error(err);\r\n//                         }\r\n//                     );\r\n//             }\r\n//         );\r\n//     };\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}