{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"./Utils\");\n\nvar User =\n/** @class */\nfunction () {\n  /*\r\n   * @hidden\r\n   */\n  function User(displayableId, name, identityProvider, userIdentifier, idToken) {\n    this.displayableId = displayableId;\n    this.name = name;\n    this.identityProvider = identityProvider;\n    this.userIdentifier = userIdentifier;\n    this.idToken = idToken;\n  }\n  /*\r\n   * @hidden\r\n   */\n\n\n  User.createUser = function (idToken, clientInfo, authority) {\n    var uid;\n    var utid;\n\n    if (!clientInfo) {\n      uid = \"\";\n      utid = \"\";\n    } else {\n      uid = clientInfo.uid;\n      utid = clientInfo.utid;\n    }\n\n    var userIdentifier = Utils_1.Utils.base64EncodeStringUrlSafe(uid) + \".\" + Utils_1.Utils.base64EncodeStringUrlSafe(utid);\n    return new User(idToken.preferredName, idToken.name, idToken.issuer, userIdentifier, idToken.decodedIdToken);\n  };\n\n  return User;\n}();\n\nexports.User = User;","map":null,"metadata":{},"sourceType":"script"}