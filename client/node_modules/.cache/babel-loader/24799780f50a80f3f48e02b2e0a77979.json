{"ast":null,"code":"var _jsxFileName = \"/Users/Cacace/Desktop/platform/platform/client/src/components/posts/ProfilePosts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport { getUserPosts } from '../../actions/post';\n\nconst ProfilePosts = (getUserPosts, match) => {\n  useEffect(() => {\n    getUserPosts(match.params.id);\n  }, [getUserPosts, match.params.id]);\n  return loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), \" Welcome to the community\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))));\n};\n\ngetUserPosts.propTypes = {\n  getUserPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getUserPosts\n})(ProfilePosts);","map":{"version":3,"sources":["/Users/Cacace/Desktop/platform/platform/client/src/components/posts/ProfilePosts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","getUserPosts","ProfilePosts","match","params","id","loading","posts","map","post","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,YAAY,GAAG,CAACD,YAAD,EAAcE,KAAd,KAAwB;AAC3CP,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAZ;AACD,GAFQ,EAEN,CAACJ,YAAD,EAAcE,KAAK,CAACC,MAAN,CAAaC,EAA3B,CAFM,CAAT;AAIA,SAAOC,OAAO,gBACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,gBAGZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,8BAFF,eAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CALF,CAHF;AAeD,CApBD;;AAsBAR,YAAY,CAACU,SAAb,GAAyB;AACvBV,EAAAA,YAAY,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADN;AAEvBJ,EAAAA,IAAI,EAAEZ,SAAS,CAACiB,MAAV,CAAiBD;AAFA,CAAzB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,IAAI,EAAEO,KAAK,CAACP;AADoB,CAAL,CAA7B;;AAIA,eAAeX,OAAO,CACpBiB,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbC,YAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport { getUserPosts } from '../../actions/post';\n\nconst ProfilePosts = (getUserPosts,match) => {\n  useEffect(() => {\n    getUserPosts(match.params.id);\n  }, [getUserPosts,match.params.id]);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Posts</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome to the community\n      </p>\n      <div className='posts'>\n        {posts.map(post => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\ngetUserPosts.propTypes = {\n  getUserPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  { getUserPosts }\n)(ProfilePosts);\n"]},"metadata":{},"sourceType":"module"}