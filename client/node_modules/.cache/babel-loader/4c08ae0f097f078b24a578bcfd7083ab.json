{"ast":null,"code":"import * as Msal from 'msal';\nexport default function Auth() {\n  const msalConfig = {\n    auth: {\n      clientId: \"ce5d1a2b-20a7-4f63-adde-6f0168cc29e5\",\n      authority: \"https://b2cmern.b2clogin.com/b2cmern.onmicrosoft.com/B2C_1_signupsignin\",\n      validateAuthority: false\n    },\n    cache: {\n      cacheLocation: \"localStorage\",\n      storeAuthStateInCookie: true\n    }\n  };\n  return new Promise((resolve, reject) => {\n    const userAgentApplication = new Msal.UserAgentApplication(msalConfig, null, function (errorDes, token, error, tokenType) {\n      console.log('callback !!!!');\n      console.log(token);\n      resolve(token);\n    });\n    userAgentApplication.handleRedirectCallback(function (errorDes, token, error, tokenType) {\n      console.log('callback  2 !!!!');\n      console.log(token);\n      resolve(token);\n    });\n    console.log('inside the promise');\n    userAgentApplication.loginRedirect([\"user.read\"]); //     userAgentApplication.loginPopup([\"user.read\"])\n    //         .then((token) => {\n    //             console.log(\"Successfully got id token\");\n    //             console.log(\"first token: \", token);\n    //             console.log(userAgentApplication.getUser().name);\n    //             if (userAgentApplication.getUser()) {\n    //                 userAgentApplication.acquireTokenSilent([\"user.read\"])\n    //                     .then((token) => {\n    //                         resolve(token);\n    //                     })\n    //                     .catch((error) => {\n    //                         reject(error);\n    //                     });\n    //             } else {\n    //                 reject(\"User not logged in\");\n    //             }\n    //         })\n    //         .catch((error) => {\n    //             reject(error);\n    //         });\n  });\n}","map":{"version":3,"sources":["D:/Projects/devconnector_2.0/client/src/utils/AuthPromise.js"],"names":["Msal","Auth","msalConfig","auth","clientId","authority","validateAuthority","cache","cacheLocation","storeAuthStateInCookie","Promise","resolve","reject","userAgentApplication","UserAgentApplication","errorDes","token","error","tokenType","console","log","handleRedirectCallback","loginRedirect"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC3B,QAAMC,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE,sCADR;AAEFC,MAAAA,SAAS,EAAE,yEAFT;AAGFC,MAAAA,iBAAiB,EAAE;AAHjB,KADS;AAMfC,IAAAA,KAAK,EAAE;AACHC,MAAAA,aAAa,EAAE,cADZ;AAEHC,MAAAA,sBAAsB,EAAE;AAFrB;AANQ,GAAnB;AAYA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,oBAAoB,GAAG,IAAIb,IAAI,CAACc,oBAAT,CAA8BZ,UAA9B,EAA0C,IAA1C,EAAgD,UAAUa,QAAV,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,SAAlC,EAA6C;AACtHC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAL,MAAAA,OAAO,CAACK,KAAD,CAAP;AACH,KAL4B,CAA7B;AAOAH,IAAAA,oBAAoB,CAACQ,sBAArB,CAA4C,UAAUN,QAAV,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,SAAlC,EAA6C;AACrFC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAL,MAAAA,OAAO,CAACK,KAAD,CAAP;AACH,KALD;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAP,IAAAA,oBAAoB,CAACS,aAArB,CAAmC,CAAC,WAAD,CAAnC,EAhBoC,CAkBxC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAvCM,CAAP;AAwCH","sourcesContent":["import * as Msal from 'msal';\r\n\r\nexport default function Auth() {\r\n    const msalConfig = {\r\n        auth: {\r\n            clientId: \"ce5d1a2b-20a7-4f63-adde-6f0168cc29e5\",\r\n            authority: \"https://b2cmern.b2clogin.com/b2cmern.onmicrosoft.com/B2C_1_signupsignin\",\r\n            validateAuthority: false\r\n        },\r\n        cache: {\r\n            cacheLocation: \"localStorage\",\r\n            storeAuthStateInCookie: true\r\n        }\r\n    };\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const userAgentApplication = new Msal.UserAgentApplication(msalConfig, null, function (errorDes, token, error, tokenType) {\r\n            console.log('callback !!!!');\r\n            console.log(token);\r\n\r\n            resolve(token);\r\n        });\r\n\r\n        userAgentApplication.handleRedirectCallback(function (errorDes, token, error, tokenType) {\r\n            console.log('callback  2 !!!!');\r\n            console.log(token);\r\n\r\n            resolve(token);\r\n        });\r\n\r\n        console.log('inside the promise');\r\n        userAgentApplication.loginRedirect([\"user.read\"]);\r\n\r\n    //     userAgentApplication.loginPopup([\"user.read\"])\r\n    //         .then((token) => {\r\n    //             console.log(\"Successfully got id token\");\r\n    //             console.log(\"first token: \", token);\r\n    //             console.log(userAgentApplication.getUser().name);\r\n\r\n    //             if (userAgentApplication.getUser()) {\r\n    //                 userAgentApplication.acquireTokenSilent([\"user.read\"])\r\n    //                     .then((token) => {\r\n    //                         resolve(token);\r\n    //                     })\r\n    //                     .catch((error) => {\r\n    //                         reject(error);\r\n    //                     });\r\n    //             } else {\r\n    //                 reject(\"User not logged in\");\r\n    //             }\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             reject(error);\r\n    //         });\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}