'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var propTypes = _interopDefault(require('prop-types'));

var loadLibrary = (function () {
  var skin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'amp-default';

  return new Promise(function (resolve, reject) {
    if (document.querySelector('#amp-azure')) return resolve();
    var scriptTag = document.createElement('script');
    var linkTag = document.createElement('link');
    linkTag.rel = 'stylesheet';
    scriptTag.id = 'amp-azure';
    scriptTag.src = '//amp.azure.net/libs/amp/2.1.5/azuremediaplayer.min.js';
    linkTag.href = '//amp.azure.net/libs/amp/2.1.5/skins/' + skin + '/azuremediaplayer.min.css';
    document.body.appendChild(scriptTag);
    document.head.insertBefore(linkTag, document.head.firstChild);
    scriptTag.onload = function () {
      return resolve({ skin: skin });
    };
  });
});

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var classnames = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ('object' !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {
		// register as 'classnames', consistent with npm package name
		undefined('classnames', [], function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());
});

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".mp-component_azure-mp-container__idgeq {\n  background: #000;\n  width: 100%;\n  height: 0;\n  display: block;\n  padding: 0;\n  position: relative;\n  overflow: hidden;\n  position: relative;\n}\n\n.mp-component_azure-mp-container__idgeq > div {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n";
var styles = { "azure-mp-container": "mp-component_azure-mp-container__idgeq" };
styleInject(css);

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};



var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};











var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var DEFAULT_SKIN = 'amp-default';
var DEFAULT_RATIO = [16, 9];

var AzureMP = function (_Component) {
  inherits(AzureMP, _Component);

  function AzureMP(props) {
    classCallCheck(this, AzureMP);

    var _this = possibleConstructorReturn(this, (AzureMP.__proto__ || Object.getPrototypeOf(AzureMP)).call(this, props));

    _this.videoNode = React__default.createRef();
    return _this;
  }

  createClass(AzureMP, [{
    key: 'destroyPlayer',
    value: function destroyPlayer() {
      this.player && this.player.dispose();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.destroyPlayer();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var skin = this.props.skin;

      this.initialization = loadLibrary(skin).then(function () {
        _this2.createPlayer();
        _this2.setVideo();
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this3 = this;

      if (prevProps.src !== this.props.src) {
        this.initialization.then(function () {
          return _this3.setVideo();
        });
      }
    }
  }, {
    key: 'setVideo',
    value: function setVideo() {
      var src = this.props.src;

      this.player.src(src);
    }
  }, {
    key: 'createPlayer',
    value: function createPlayer() {
      var _props = this.props,
          options = _props.options,
          onInstanceCreated = _props.onInstanceCreated;

      var defaultOptions = {
        controls: true,
        logo: { enabled: false }
      };
      this.player = window.amp(this.videoNode.current, Object.assign({}, defaultOptions, options));
      onInstanceCreated && onInstanceCreated(this.player);
    }
  }, {
    key: 'getRatioStyles',
    value: function getRatioStyles(ratio) {
      if (!ratio) {
        return {};
      }
      return { paddingBottom: ratio[1] / ratio[0] * 100 + '%' };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          className = _props2.className,
          _props2$skin = _props2.skin,
          skin = _props2$skin === undefined ? DEFAULT_SKIN : _props2$skin,
          _props2$adaptRatio = _props2.adaptRatio,
          adaptRatio = _props2$adaptRatio === undefined ? DEFAULT_RATIO : _props2$adaptRatio,
          cornerPlayBtn = _props2.cornerPlayBtn;

      return React__default.createElement(
        'div',
        {
          style: this.getRatioStyles(adaptRatio),
          className: classnames(defineProperty({}, styles['azure-mp-container'], adaptRatio), className) },
        React__default.createElement('video', {
          ref: this.videoNode,
          className: classnames('azuremediaplayer', skin + '-skin', {
            'amp-big-play-centered': !cornerPlayBtn
          })
        })
      );
    }
  }]);
  return AzureMP;
}(React.Component);

exports.AzureMP = AzureMP;
exports.loadLibrary = loadLibrary;
